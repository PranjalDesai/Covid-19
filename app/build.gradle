apply plugin: 'com.android.application'
apply plugin: "kotlin-android"
apply plugin: "kotlin-android-extensions"
apply plugin: "kotlin-kapt"
apply plugin: 'androidx.navigation.safeargs.kotlin'
//apply plugin: 'io.fabric'
//apply plugin: 'com.google.gms.google-services'


// Manifest version information
def versionMajor = 0 // Don't increment unless told to
def versionMinor = 0 // Increment by one after the patch version rolls over max threshold
def versionPatch = 0 // Increment for every new release
def versionBuild = 1 // Increment for each additional rebuild needed for the release (set to zero for the first build of a new release)

// generate a generic version code for each combo of above values
def versionCodeValue = (versionMajor * 1000) + (versionMinor * 100) + (versionPatch * 10) + versionBuild

def gitSha() {
    def p = 'git rev-parse --short HEAD'.execute([], project.rootDir)
    p.waitFor()
    if (p.exitValue() != 0) {
        throw new RuntimeException(p.errorStream.text)
    }

    return p.text.trim()
}


android {
    compileSdkVersion compile_sdk_version
    buildToolsVersion = build_tools_version

    defaultConfig {
        applicationId "com.pranjaldesai.coronavirustracker"
        minSdkVersion min_sdk_version
        targetSdkVersion target_sdk_version

        versionCode  versionCodeValue
        versionName "${versionMajor}.${versionMinor}.${versionPatch}-${gitSha()}"

        multiDexEnabled enable_multidex

        testInstrumentationRunner "androidx.test.runner.AndroidJUnitRunner"
    }

    compileOptions {
        sourceCompatibility jdk_version
        targetCompatibility jdk_version
    }

    kotlinOptions {
        jvmTarget = jdk_version
    }

    adbOptions {
        installOptions '-g', '-r'   // Notes:
        // -g grants all permissions when installing the app
        // -r allows reinstalling the app
    }

    dataBinding {
        enabled = true
    }

    signingConfigs {
        apply from: "$rootProject.rootDir/build_scripts/signing.gradle"

        release {
            storeFile file(keystoreProperties['storeFile'])
            storePassword keystoreProperties['storePassword']
            keyAlias keystoreProperties['keyAlias']
            keyPassword keystoreProperties['keyPassword']
        }
    }

    buildTypes {
        release {
            minifyEnabled true
            shrinkResources true
            signingConfig signingConfigs.release
            proguardFiles getDefaultProguardFile("proguard-android-optimize.txt"), "$rootProject.rootDir/proguard-rules.pro", "proguard-rules.pro"
        }
    }

    androidExtensions {
        experimental = true
    }

    packagingOptions {
        exclude 'META-INF/DEPENDENCIES'
        exclude 'META-INF/LICENSE'
        exclude 'META-INF/LICENSE.md'
        exclude 'META-INF/LICENSE-notice.md'
        exclude 'META-INF/LICENSE.txt'
        exclude 'META-INF/license.txt'
        exclude 'META-INF/NOTICE'
        exclude 'META-INF/NOTICE.txt'
        exclude 'META-INF/notice.txt'
        exclude 'META-INF/ASL2.0'
    }
}

dependencies {
    implementation fileTree(dir: "libs", include: ["*.jar"])
    kapt "androidx.databinding:databinding-compiler:$gradle_version"
    kapt "androidx.room:room-compiler:$room_version"
    implementation "org.jetbrains.kotlin:kotlin-stdlib:$kotlin_version"
    implementation "androidx.navigation:navigation-fragment-ktx:$navigation_version"
    implementation "androidx.navigation:navigation-ui-ktx:$navigation_version"
    implementation("androidx.annotation:annotation:$annotation_version") { force = true }
    implementation "androidx.appcompat:appcompat:$appcompat_version"
    implementation "androidx.constraintlayout:constraintlayout:$constraintlayout_version"
    implementation "androidx.core:core-ktx:$core_ktx_version"
    implementation "androidx.lifecycle:lifecycle-extensions:$lifecycle_version"
    implementation "androidx.lifecycle:lifecycle-viewmodel-ktx:$lifecycle_version"
    implementation "androidx.media:media:$media_version"
    implementation "androidx.multidex:multidex:$multidex_version"
    implementation "androidx.recyclerview:recyclerview:$recyclerview_version"
    implementation "androidx.swiperefreshlayout:swiperefreshlayout:$swiperefreshlayout_version"
    implementation "com.google.firebase:firebase-analytics:$firebase_analytics_version"
    implementation "com.google.firebase:firebase-messaging:$firebase_messaging_version"
    implementation "com.crashlytics.sdk.android:crashlytics:$crashlytics_version"
    implementation "com.google.android.material:material:$materialdesign_version"
    implementation "com.google.code.gson:gson:$gson_version"
    implementation "com.jakewharton.timber:timber:$timber_version"
    implementation "com.squareup.okhttp3:logging-interceptor:$okhttp_version"
    implementation "com.squareup.picasso:picasso:$picasso_version"
    implementation "com.squareup.retrofit2:retrofit:$retrofit_version"
    implementation "androidx.room:room-runtime:$room_version"
    implementation "androidx.room:room-ktx:$room_version"
    implementation "org.jetbrains.kotlinx:kotlinx-coroutines-android:$coroutine_version"
    implementation "org.jetbrains.kotlinx:kotlinx-coroutines-core:$coroutine_version"

    implementation "org.koin:koin-core:$koin_version"
    implementation "org.koin:koin-core-ext:$koin_version"
    implementation "org.koin:koin-android:$koin_version"
    implementation "org.koin:koin-androidx-scope:$koin_version"
    implementation "org.koin:koin-androidx-viewmodel:$koin_version"
    testImplementation 'junit:junit:4.12'
    androidTestImplementation 'androidx.test.ext:junit:1.1.1'
    androidTestImplementation 'androidx.test.espresso:espresso-core:3.2.0'

}